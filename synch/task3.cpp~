#include <sys/types.h>
#include <sys/ipc.h>
#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <sys/wait.h>

double f(double x) {
    return cos(x) * cos(x) + 5;
}

double calculate(double a, double step, int stepnum) {
    double c = (f(a) + f(a + step * stepnum)) / 2.;
    
    double sum = 0.;
    for (int i = 1; i < stepnum; i++) {
        sum += f(a + i * step);    
    }

    return step * (c + sum);
}

int main(int argc, char* argv[]) {
    if (argc != 5) {
        printf("Error: invalid application command line options.\n");
        exit(1);
    }
        
    int procnum = atoi(argv[1]);
    int pointnum = atoi(argv[2]);
    double a = strtod(argv[3], 0);
    double b = strtod(argv[4], 0);

    double netstep = (b - a) / (pointnum * procnum);

    int fd[2];
    int res = pipe(fd);
    if (res < 0) {
        printf("Error: cannot open pipe.\n");
        exit(1);
    }

    double isum = 0.;

    for (int p = 0; p < procnum; p++) {

        double la = a + p * pointnum * netstep;
        double lb = a + (p + 1) * pointnum * netstep;
        
  
        if (p == 0) {
            isum = calculate(la, netstep, pointnum);
            printf("proc %i, a = %lf, b = %lf, step = %lf, steps = %i, Iab = %lf \n", 
                    p, la, lb, netstep, pointnum, isum);           
        } else {
            int pid = fork();
            if (pid == -1) {
                printf("Error: fork failed!\n");
                exit(1);
            }

            if (pid == 0) {
                double local_res = calculate(la, netstep, pointnum);
                write(fd[1], &local_res, sizeof(double));
                printf("proc %i, a = %lf, b = %lf, step = %lf, steps = %i, Iab = %lf \n", 
                    p, la, lb, netstep, pointnum, local_res);
                exit(0);
            }            
        }
    }

    int status;           
    while (wait(&status) > 0);

    for (int i = 0; i < procnum - 1; i++) {
        double buf = 0.;
        read(fd[0], &buf, sizeof(double));
        isum += buf;
    }

    printf("Result = %lf\n", isum);
            
    close(fd[0]);
    close(fd[1]);

    exit(0);                
}
